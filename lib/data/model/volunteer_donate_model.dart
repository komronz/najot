///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class VolunteerDonateResultsProjectCategory {

  int? id;
  String? name;
  String? type;
  String? photo;

  VolunteerDonateResultsProjectCategory({
    this.id,
    this.name,
    this.type,
    this.photo,
  });
  VolunteerDonateResultsProjectCategory.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    name = json['name']?.toString();
    type = json['type']?.toString();
    photo = json['photo']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['name'] = name;
    data['type'] = type;
    data['photo'] = photo;
    return data;
  }
}

class VolunteerDonateResultsProjectOrganization {
  VolunteerDonateResultsProjectOrganization();
VolunteerDonateResultsProjectOrganization.fromJson(Map<String, dynamic> json) {
}
Map<String, dynamic> toJson() {
  final data = <String, dynamic>{};
  return data;
}
}

class VolunteerDonateResultsProjectOwner {
  int? id;
  String? firstName;
  String? lastName;
  String? photo;

  VolunteerDonateResultsProjectOwner({
    this.id,
    this.firstName,
    this.lastName,
    this.photo,
  });
  VolunteerDonateResultsProjectOwner.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    firstName = json['first_name']?.toString();
    lastName = json['last_name']?.toString();
    photo = json['photo']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['first_name'] = firstName;
    data['last_name'] = lastName;
    data['photo'] = photo;
    return data;
  }
}

class VolunteerDonateResultsProject {

  int? id;
  VolunteerDonateResultsProjectOwner? owner;
  String? type;
  String? title;
  String? helpType;
  VolunteerDonateResultsProjectOrganization? organization;
  String? deadline;
  String? cover;
  String? content;
  String? coverUrl;
  VolunteerDonateResultsProjectCategory? category;
  int? investorsCount;
  String? amountCollected;
  int? percent;
  String? cardNumber;
  String? requiredFund;
  String? address;
  bool? isFavourite;
  bool? isDone;
  String? createdAt;
  String? modifiedAt;

  VolunteerDonateResultsProject({
    this.id,
    this.owner,
    this.type,
    this.title,
    this.helpType,
    this.organization,
    this.deadline,
    this.cover,
    this.content,
    this.coverUrl,
    this.category,
    this.investorsCount,
    this.amountCollected,
    this.percent,
    this.cardNumber,
    this.requiredFund,
    this.address,
    this.isFavourite,
    this.isDone=false,
    this.createdAt,
    this.modifiedAt,
  });
  VolunteerDonateResultsProject.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    owner = (json['owner'] != null) ? VolunteerDonateResultsProjectOwner.fromJson(json['owner']) : null;
    type = json['type']?.toString();
    title = json['title']?.toString();
    helpType = json['help_type']?.toString();
    organization = (json['organization'] != null) ? VolunteerDonateResultsProjectOrganization.fromJson(json['organization']) : null;
    deadline = json['deadline']?.toString();
    cover = json['cover']?.toString();
    content = json['content']?.toString();
    coverUrl = json['cover_url']?.toString();
    category = (json['category'] != null) ? VolunteerDonateResultsProjectCategory.fromJson(json['category']) : null;
    investorsCount = json['investors_count']?.toInt();
    amountCollected = json['amount_collected']?.toString();
    percent = json['percent']?.toInt();
    cardNumber = json['card_number']?.toString();
    requiredFund = json['required_fund']?.toString();
    address = json['address']?.toString();
    isFavourite = json['is_favourite'];
    isDone = false;
    createdAt = json['created_at']?.toString();
    modifiedAt = json['modified_at']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    if (owner != null) {
      data['owner'] = owner!.toJson();
    }
    data['type'] = type;
    data['title'] = title;
    data['help_type'] = helpType;
    if (organization != null) {
      data['organization'] = organization!.toJson();
    }
    data['deadline'] = deadline;
    data['cover'] = cover;
    data['content'] = content;
    data['cover_url'] = coverUrl;
    if (category != null) {
      data['category'] = category!.toJson();
    }
    data['investors_count'] = investorsCount;
    data['amount_collected'] = amountCollected;
    data['percent'] = percent;
    data['card_number'] = cardNumber;
    data['required_fund'] = requiredFund;
    data['address'] = address;
    data['is_favourite'] = isFavourite;
    data['is_done'] = isDone;
    data['created_at'] = createdAt;
    data['modified_at'] = modifiedAt;
    return data;
  }
}

class VolunteerDonateResultsUser {

  int? id;
  String? firstName;
  String? lastName;
  String? photo;

  VolunteerDonateResultsUser({
    this.id,
    this.firstName,
    this.lastName,
    this.photo,
  });
  VolunteerDonateResultsUser.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    firstName = json['first_name']?.toString();
    lastName = json['last_name']?.toString();
    photo = json['photo']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['first_name'] = firstName;
    data['last_name'] = lastName;
    data['photo'] = photo;
    return data;
  }
}

class VolunteerDonateResults {

  int? id;
  VolunteerDonateResultsUser? user;
  VolunteerDonateResultsProject? project;
  String? executionTime;
  String? phone;
  String? status;

  VolunteerDonateResults({
    this.id,
    this.user,
    this.project,
    this.executionTime,
    this.phone,
    this.status,
  });
  VolunteerDonateResults.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    user = (json['user'] != null) ? VolunteerDonateResultsUser.fromJson(json['user']) : null;
    project = (json['project'] != null) ? VolunteerDonateResultsProject.fromJson(json['project']) : null;
    executionTime = json['execution_time']?.toString();
    phone = json['phone']?.toString();
    status = json['status']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    if (user != null) {
      data['user'] = user!.toJson();
    }
    if (project != null) {
      data['project'] = project!.toJson();
    }
    data['execution_time'] = executionTime;
    data['phone'] = phone;
    data['status'] = status;
    return data;
  }
}

class VolunteerDonateLinks {

  String? next;
  String? previous;

  VolunteerDonateLinks({
    this.next,
    this.previous,
  });
  VolunteerDonateLinks.fromJson(Map<String, dynamic> json) {
    next = json['next']?.toString();
    previous = json['previous']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['next'] = next;
    data['previous'] = previous;
    return data;
  }
}

class VolunteerDonate {

  VolunteerDonateLinks? links;
  int? currentPageNumber;
  int? totalPages;
  int? count;
  List<VolunteerDonateResults>? results;

  VolunteerDonate({
    this.links,
    this.currentPageNumber,
    this.totalPages,
    this.count,
    this.results,
  });
  VolunteerDonate.fromJson(Map<String, dynamic> json) {
    links = (json['links'] != null) ? VolunteerDonateLinks.fromJson(json['links']) : null;
    currentPageNumber = json['current_page_number']?.toInt();
    totalPages = json['total_pages']?.toInt();
    count = json['count']?.toInt();
    // if (json['results'] != null) {
    //   results = <VolunteerDonateResults>[];
    //   json['results'].forEach((v) {
    //     results!.add(new VolunteerDonateResults.fromJson(v));
    //
    //   });
    // }
    if (json['results'] != null) {
      final v = json['results'];
      final arr0 = <VolunteerDonateResults>[];
      v.forEach((v) {
        arr0.add(VolunteerDonateResults.fromJson(v));
      });
      results = arr0;
    }
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (links != null) {
      data['links'] = links!.toJson();
    }
    data['current_page_number'] = currentPageNumber;
    data['total_pages'] = totalPages;
    data['count'] = count;
    if (results != null) {
      final v = results;
      final arr0 = [];
      v!.forEach((v) {
        arr0.add(v.toJson());
      });
      data['results'] = arr0;
    }
    return data;
  }
}
