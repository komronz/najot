import 'package:equatable/equatable.dart';

///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class MainFaqModel extends Equatable {
  List<FaqModel>? faqModel;

  MainFaqModel({
    this.faqModel,
  });

  static MainFaqModel mainFaqModel = MainFaqModel(
    faqModel: const [],
  );

  MainFaqModel.fromJson(List<dynamic>? jsonList) {
    if (jsonList != null) {
      faqModel = <FaqModel>[];
      jsonList.forEach((v) {
        faqModel!.add(new FaqModel.fromJson(v));
      });
    }
  }

  @override
  // TODO: implement props
  List<Object?> get props => [faqModel];
  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
          other is MainFaqModel &&
              runtimeType == other.runtimeType &&
              faqModel == other.faqModel;

}

class FaqModel extends Equatable {
  int? id;
  String? question;
  String? answer;
  int? author;
  bool? isOpen;

  FaqModel({
    this.id,
    this.question,
    this.answer,
    this.author,
    this.isOpen = false,
  });

  FaqModel.fromJson(Map<String, dynamic> json) {
    id = json['id']?.toInt();
    question = json['question']?.toString();
    answer = json['answer']?.toString();
    author = json['author']?.toInt();
    isOpen = false;
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['id'] = id;
    data['question'] = question;
    data['answer'] = answer;
    data['author'] = author;
    data['is_open'] = isOpen;
    return data;
  }

  @override
  List<Object?> get props => [
        id,
        question,
        answer,
        author,
        isOpen,
      ];

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is FaqModel &&
          runtimeType == other.runtimeType &&
          id == other.id &&
          question == other.question &&
          answer == other.answer &&
          isOpen == other.isOpen &&
          author == other.author;
}
