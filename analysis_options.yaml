# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, alnd plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
  # avoid_print: false  # Uncomment to disable the `avoid_print` rule
  # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule
# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
analyzer:
  exclude:
    - '*.g.dart'
    - 'lib/data/localization/locale_keys.g.dart'
#include: package:lint/analysis_options.yaml
#
#analyzer:
#  strong-mode:
#    # Will become the default once non-nullable types land
#    # https://github.com/dart-lang/sdk/issues/31410#issuecomment-510683629
#    implicit-casts: true
#  exclude:
#    - '*.g.dart'
#    - 'lib1/data/db/*.g.dart'
#  #    - '**/*.g.dart'
#  errors:
#    undefined_identifier: error
#    undefined_class: error
#    undefined_method: error
#    undefined_function: error
#    missing_return: error
#    return_of_invalid_type: false
#    no_adjacent_strings_in_list: error
#    dead_code: info
#    unused_import: info
#    must_be_immutable: ignore
#
#linter:
#  rules:
#    # Use parameter order as in json response
#    always_put_required_named_parameters_first: true
#    avoid_classes_with_only_static_members: false
#
#    # Make constructors the first thing in every class
#    sort_constructors_first: false
#
#    # The new tabs vs. spaces. Choose wisely
#    prefer_single_quotes: false
#    prefer_double_quotes: false
#
#    # Good packages document everything
#    public_member_api_docs: false
#
#    # Blindly follow the Flutter code style, which prefers types everywhere
#    always_specify_types: false
#
#    # Back to the 80s
#    # lines_longer_than_80_chars: true
#
#    avoid_print: true
#
#    close_sinks: false
#
#    constant_identifier_names: ALL_CAPS
#
#    curly_braces_in_flow_control_structures: true
#
#    empty_statements: true
#
#    always_declare_return_types: true
#
#    return_of_invalid_type: true
#
#    unawaited_futures: false
#
#    avoid_void_async: true
#
#    avoid_relative_lib_imports: true
#
#    non_constant_default_value: false